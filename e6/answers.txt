1. I do not think we are p-hacking values here because it is reasonable to just look at instructor's search counts
   instead of all users since search feature might be more relevant to instructors.
   According to stat I got, I conclude that instructors search more/less with new search feature
   and I am confortable with this conclusion
2. If we had done t-test between each pair of sorting implementation, we would run 21 tests
   The probability of having all conclusions correct is 0.34 then we have an effective pvalue of 0.66
3. This is the result I got from runnint analysis_data.py on CSIL machine
      	Multiple Comparison of Means - Tukey HSD,FWER=0.05
      =============================================================
      group1         group2     meandiff  lower   upper  reject
      -------------------------------------------------------------
      merge      partition_sort -0.0451  -0.0484 -0.0418  True
      merge           qs1        -0.116  -0.1193 -0.1127  True
      merge           qs2       -0.0879  -0.0912 -0.0846  True
      merge           qs3       -0.0886  -0.0919 -0.0853  True
      merge           qs4        0.355    0.3517  0.3583  True
      merge           qs5        0.0754   0.0722  0.0787  True
      partition_sort  qs1       -0.0709  -0.0742 -0.0676  True
      partition_sort  qs2       -0.0428  -0.0461 -0.0395  True
      partition_sort  qs3       -0.0435  -0.0468 -0.0402  True
      partition_sort  qs4         0.4     0.3967  0.4033  True
      partition_sort  qs5        0.1205   0.1172  0.1238  True
      qs1             qs2        0.0281   0.0248  0.0314  True
      qs1             qs3        0.0274   0.0241  0.0307  True
      qs1             qs4        0.4709   0.4676  0.4742  True
      qs1             qs5        0.1914   0.1881  0.1947  True
      qs2             qs3       -0.0007   -0.004  0.0026 False
      qs2             qs4        0.4429   0.4396  0.4462  True
      qs2             qs5        0.1633   0.1601  0.1666  True
      qs3             qs4        0.4436   0.4403  0.4468  True
      qs3             qs5        0.164    0.1607  0.1673  True
      qs4             qs5       -0.2795  -0.2828 -0.2762  True
      -------------------------------------------------------------
      qs1 mean: 0.006053924560546875
      qs2 mean: 0.034122766147960316
      qs3 mean: 0.03342768062244762
      qs4 mean: 0.4769789478995583
      qs5 mean: 0.19746910442005505
      merge mean: 0.12202304059808905
      partion_sort mean: 0.07696280912919477\
     
     Sorting algorithm rank
     1. qs1
     2. qs2, qs3
     3. partition_sort
     4. merge
     5. qs5
     6. qs4
     Note: qs2 and qs3 can't be distinguished and their average runtime seems to be very similar
   
