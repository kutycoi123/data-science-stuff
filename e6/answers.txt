1. I do not think we are p-hacking values here because it is reasonable to just look at instructor's search counts
   instead of all users since search feature might be more relevant to instructors.
   According to stat I got, I conclude that instructors search more/less with new search feature
   and I am confortable with this conclusion
2. If we had done t-test between each pair of sorting implementation, we would run 21 tests
   The probability of having all conclusions correct is 0.34 then we have an effective pvalue of 0.66
3. This is the result I got from runnint analysis_data.py on CSIL machine
   	Multiple Comparison of Means - Tukey HSD,FWER=0.05
   =============================================================
   group1         group2     meandiff  lower   upper  reject
   -------------------------------------------------------------
   merge      partition_sort -0.0612  -0.0657 -0.0568  True
   merge           qs1       -0.1341  -0.1385 -0.1296  True
   merge           qs2       -0.1042  -0.1086 -0.0998  True
   merge           qs3       -0.1066   -0.111 -0.1021  True
   merge           qs4        0.4105   0.406   0.4149  True
   merge           qs5        0.0847   0.0803  0.0892  True
   partition_sort  qs1       -0.0728  -0.0773 -0.0684  True
   partition_sort  qs2        -0.043  -0.0474 -0.0385  True
   partition_sort  qs3       -0.0454  -0.0498 -0.0409  True
   partition_sort  qs4        0.4717   0.4673  0.4761  True
   partition_sort  qs5        0.1459   0.1415  0.1504  True
   qs1             qs2        0.0299   0.0254  0.0343  True
   qs1             qs3        0.0275   0.023   0.0319  True
   qs1             qs4        0.5445   0.5401  0.549   True
   qs1             qs5        0.2188   0.2143  0.2232  True
   qs2             qs3       -0.0024  -0.0068  0.0021 False
   qs2             qs4        0.5147   0.5102  0.5191  True
   qs2             qs5        0.1889   0.1845  0.1934  True
   qs3             qs4        0.5171   0.5126  0.5215  True
   qs3             qs5        0.1913   0.1869  0.1958  True
   qs4             qs5       -0.3258  -0.3302 -0.3213  True
   -------------------------------------------------------------
   qs1 mean: 0.0062709999084472655
   qs2 mean: 0.036122398376464845
   qs3 mean: 0.03374125957489014
   qs4 mean: 0.5508099699020386
   qs5 mean: 0.22505049228668214
   merge mean: 0.14032768726348877
   partion_sort mean: 0.07911011219024658
     
     Sorting algorithm rank
     1. qs1
     2. qs2, qs3
     3. partition_sort
     4. merge
     5. qs5
     6. qs4
     Note: qs2 and qs3 can't be distinguished and their average runtime seems to be very similar
   
